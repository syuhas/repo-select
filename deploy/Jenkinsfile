pipeline {
    agent any

    environment {
        GITHUB_TOKEN = credentials('GITHUB_TOKEN')  // Fetch GitHub token securely
        REPO_LIST_FILE = "${WORKSPACE}/github_repos.txt"  // Store repo list in workspace
    }

    stages {
        stage('Fetch GitHub Repositories') {
            steps {
                script {
                    echo "Fetching repositories from GitHub..."
                    
                    sh """
                    curl -s -L \
                    -H "Accept: application/vnd.github+json" \
                    -H "Authorization: Bearer ${GITHUB_TOKEN}" \
                    -H "X-GitHub-Api-Version: 2022-11-28" \
                    "https://api.github.com/user/repos" | jq -r '.[].clone_url' > ${REPO_LIST_FILE}
                    """

                    echo "Repositories fetched!"
                    sh "cat ${REPO_LIST_FILE}"
                }
            }
        }

        stage('User Selects Repository') {
            steps {
                script {
                    def repoChoices = readFile(REPO_LIST_FILE).trim().split("\n")

                    properties([
                        parameters([
                            choice(name: 'GIT_REPO',
                                choices: repoChoices.join("\n"),
                                description: 'Select the repository to build')
                        ])
                    ])

                    def userInput = input(
                        id: 'RepoSelection',
                        message: 'Select a repository to build:',
                        parameters: [
                            choice(name: 'SELECTED_REPO', choices: repoChoices, description: 'Select a repository')
                        ]
                    )
                    env.GIT_REPO = userInput
                }
            }
        }

        stage('Fetch Branches from Selected Repository') {
            steps {
                script {
                    echo "Fetching branches for repository: ${env.GIT_REPO}"

                    sh """
                    curl -s -L \
                    -H "Authorization: Bearer ${GITHUB_TOKEN}" \
                    "https://api.github.com/repos/${env.GIT_REPO.replace('https://github.com/', '')}/branches" | jq -r '.[].name' > branches.txt
                    """

                    def branchChoices = readFile("branches.txt").trim().split("\n")

                    properties([
                        parameters([
                            choice(name: 'BRANCH',
                                choices: branchChoices.join("\n"),
                                description: 'Select the branch to build')
                        ])
                    ])

                    def selectedBranch = input(
                        id: 'BranchSelection',
                        message: 'Select a branch to build:',
                        parameters: [
                            choice(name: 'SELECTED_BRANCH', choices: branchChoices, description: 'Select a branch')
                        ]
                    )

                    env.BRANCH = selectedBranch
                }
            }
        }
    }
}